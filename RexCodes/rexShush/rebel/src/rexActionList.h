#ifndef RexActionList_H
#define RexActionList_H

void rebelApp::setActionList()
{
	_rexActionList.push_back("int awind(long flag)");
	_rexActionList.push_back("int da_cntrl_1(long da_num, long source, long source_num)");
	_rexActionList.push_back("int Pda_cntrl_1(long *da_num, long *source, long *source_num)");
	_rexActionList.push_back("int da_cntrl_2(long da0_num, long source0, long source0_num, long da1_num, long source1, long source1_num)");
	_rexActionList.push_back("int Pda_cntrl_2(long *da0_num, long *source0, long *source0_num, long *da1_num, long *source1, long *source1_num)");
	_rexActionList.push_back("int da_cursor(long da_x, long da_y, long cursor)");
	_rexActionList.push_back("int Pda_cursor(long *da_x, long *da_y, long *cursor)");
	_rexActionList.push_back("int da_init(void)");
	_rexActionList.push_back("int da_mode(long da_num, long mode)");
	_rexActionList.push_back("int Pda_mode(long *da_num, long *mode)");
	_rexActionList.push_back("int da_offset(long da_num, long val)");
	_rexActionList.push_back("int Pda_offset(long *da_num, long *val)");
	_rexActionList.push_back("int da_set_1(long da_num, long val)");
	_rexActionList.push_back("int Pda_set_1(long *da_num, long *val)");
	_rexActionList.push_back("int da_set_2(long da0_num, long val0, long da1_num, long val1)");
	_rexActionList.push_back("int Pda_set_2(long *da0_num, long *val0, long *da1_num, long *val1)");
	_rexActionList.push_back("int dio_off(DIO_ID id)");
	_rexActionList.push_back("int Pdio_off(DIO_ID *id)");
	_rexActionList.push_back("int dio_on(DIO_ID id)");
	_rexActionList.push_back("int Pdio_on(DIO_ID *id)");
	_rexActionList.push_back("int dio_onoff(DIO_ID id_on, DIO_ID id_off)");
	_rexActionList.push_back("int Pdio_onoff(DIO_ID *id_on, DIO_ID *id_off)");
	_rexActionList.push_back("int dio_out(DIO_ID id, long val)");
	_rexActionList.push_back("int Pdio_out(DIO_ID *id, long *val)");
	_rexActionList.push_back("int int hold_eye(void)");
	_rexActionList.push_back("int keep_eye(void)");
	_rexActionList.push_back("int ma_cntrl(int num, int *map, int count, int rate, int repeat)");
	_rexActionList.push_back("int Pma_cntrl(int *num, int *map, int *count, int *rate, int *repeat)");
	_rexActionList.push_back("int ma_init(void)");
	_rexActionList.push_back("int ma_reset(int num)");
	_rexActionList.push_back("int Pma_reset(int *num)");
	_rexActionList.push_back("int ma_start(int num)");
	_rexActionList.push_back("int Pma_start(int *num)");
	_rexActionList.push_back("int ma_stop(int num)");
	_rexActionList.push_back("int Pma_stop(int *num)");
	_rexActionList.push_back("int mwind(long flag)");
	_rexActionList.push_back("int off_eye(long hoff, long voff)");
	_rexActionList.push_back("int Poff_eye(long *hoff, long *voff)");
	_rexActionList.push_back("int PgetClockTime(long *time");
	_rexActionList.push_back("int pre_post(long pre_time, long post_time)");
	_rexActionList.push_back("int Ppre_post(long *pre_time, long *post_time)");
	_rexActionList.push_back("RA_RAMP_TIME ra_compute_time(long rnum, long presetper, long randper)");
	_rexActionList.push_back("int Pra_compute_time(long *rnum, long *presetper, long *randper, RA_RAMP_TIME *ra_time)");
	_rexActionList.push_back("int ra_init(void)");
	_rexActionList.push_back("int ra_new(int ramp_num, int length, int angle, int velocity, int X_offset, int Y_offset, int ecode, int type)");
	_rexActionList.push_back("int Pra_new(int *ramp_num, int *length, int *angle, int *velocity, int *X_offset, int *Y_offset, int *ecode, int *type)");
	_rexActionList.push_back("int ra_phiend(long ramp_num)");
	_rexActionList.push_back("int Pra_phiend(long *ramp_num)");
	_rexActionList.push_back("int ra_phistart(long ramp_num)");
	_rexActionList.push_back("int Pra_phistart(long *ramp_num)");
	_rexActionList.push_back("int ra_start(long ramp_num, long flag, DIO_ID device)");
	_rexActionList.push_back("int Pra_start(long *ramp_num, long *flag, DIO_ID *device)");
	_rexActionList.push_back("int ra_stop(long ramp_num)");
	_rexActionList.push_back("int Pra_stop(long *ramp_num)");
	_rexActionList.push_back("int ra_tostart(long ramp_num)");
	_rexActionList.push_back("int Pra_tostart(long *ramp_num)");
	_rexActionList.push_back("int ramptd(long rnum)");
	_rexActionList.push_back("int Pramptd(long *rnum)");
	_rexActionList.push_back("int reset_s(long flag)");
	_rexActionList.push_back("int score(long flag)");
	_rexActionList.push_back("int PsetFlag(int *flag, int val)");
	_rexActionList.push_back("int set_times(char *stateName, long preset, long random)");
	_rexActionList.push_back("int Pset_times(char *stateName, long *preset, long *random)");
	_rexActionList.push_back("int sd_set(long ctlval)");
	_rexActionList.push_back("int wd_cntrl(long windowNum, long flag)");
	_rexActionList.push_back("int Pwd_cntrl(long *windowNum, long *flag)");
	_rexActionList.push_back("int wd_init(void)");
	_rexActionList.push_back("int wd_pos(long windowNum, long x_position, long y_position)");
	_rexActionList.push_back("int Pwd_pos(long *windowNum, long *x_position, long *y_position)");
	_rexActionList.push_back("int wd_siz(long windowNum, long x_size, long y_size)");
	_rexActionList.push_back("int Pwd_siz(long *windowNum, long *x_size, long *y_size)");
	_rexActionList.push_back("int wd_src_check(long windowNum, long x_src, long x_src_num, long y_src, long y_src_num)");
	_rexActionList.push_back("int Pwd_src_check(long *windowNum, long *x_src, long *x_src_num, long *y_src, long *y_src_num)");
	_rexActionList.push_back("int wd_src_pos(long windowNum, long x_src, long x_src_num, long y_src, long y_src_num)");
	_rexActionList.push_back("int Pwd_src_pos(long *windowNum, long *x_src, long *x_src_num, long *y_src, long *y_src_num)");
	_rexActionList.push_back("int wd_test(long flag)");
	_rexActionList.push_back("int Pwd_test(long *flag)");
	_rexActionList.push_back("int PvexAllOff(void)");
	_rexActionList.push_back("int PvexClearClipRect(int *num_objects, int *obj_list)");
	_rexActionList.push_back("int PvexClipRectFromFixPoint(int *num_objects, int *obj_list, int *width_list, int *height_list, int *x_list, int *y_list)");
	_rexActionList.push_back("int PvexClipRectSet(int *num_objects, int *obj_list, int *width_list, int *height_list, int *x_list, int *y_list)");
	_rexActionList.push_back("int PvexCopyObject(int *source_obj, int *dest_obj, float *x_scale, float *y_scale)");
	_rexActionList.push_back("int PvexDigitalSync(int *sync)");
	_rexActionList.push_back("int PvexDimFix(void)");
	_rexActionList.push_back("int PvexDrawAnnulus(int *num_objects, int *obj_list, int *outer_list, int *inner_list, int *contrast_list)");
	_rexActionList.push_back("int PvexDrawBar(int *num_objects, int *obj_list, int *angle_list, int *width_list, int *length_list, int *contrast_list)");
	_rexActionList.push_back("int PvexDrawEllipticalFlowField(int *num_objects, int *obj_list, int *radius_list, int *width_list, int *height_list, int *near_list, int *far_list, int *coverage_list, int *size_list)");
	_rexActionList.push_back("int PvexDrawFlowField(int *num_objects, int *obj_list, int *width_list, int *height_list, int *near_list, int *far_list, int *coverage_list, int *size_list)");
	_rexActionList.push_back("int PvexDrawHaar(int *num_objects, int *obj_list, int *pattern_list, int *size_list, int *contrast_list)");
	_rexActionList.push_back("int PvexDrawHalfSineGrating(int *nObjects, int *objList, int *orList, float *spatFreqList, float *tempFreqList, int *cntrPhaseList, float *redList, float *greenList, float *blueList, int *sizLis)");
	_rexActionList.push_back("int PvexDrawHalfSquareGrating(int *nObjects, int *objList, int *orList, float *spatFreqList, float *tempFreqList, int *cntrPhaseList, float *redList, float *greenList, float *blueList, int *sizLis)");
	_rexActionList.push_back("int PvexDrawOknGrating(int *num_objects, int *obj_list, int direction_list, int *speed_list, int *width_list, int *height_list, int *bar_width_list)");
	_rexActionList.push_back("int PvexDrawPngImage(int *num_objects, int *obj_list, int *pattern_list)");
	_rexActionList.push_back("int PvexDrawRandom(int *num_objects, int *obj_list, int *col_list, int *row_list, int *size_list, int *white_list");
	_rexActionList.push_back("int PvexDrawRgbUserPattern(int *num_objects, int *obj_list, int *pattern_list, int *size_list, int *contrast_list)");
	_rexActionList.push_back("int PvexDrawSineGrating(int *nObjects, int *objList, int *orList, float *spatFreqList, float *tempFreqList, int *cntrPhaseList, float *redList, float *greenList, float *blueList, int *sizList)");
	_rexActionList.push_back("int PvexDrawSquareGrating(int *nObjects, int *objList, int *orList, float *spatFreqList, float *tempFreqList, int *cntrPhaseList, float *redList, float *greenList, float *blueList, int *sizList)");
	_rexActionList.push_back("int PvexDrawTiffImage(int *num_objects, int *obj_list, int *pattern_list)");
	_rexActionList.push_back("int PvexDrawUserPattern(int *num_objects, int *obj_list, int *pattern_list, int *size_list, int *contrast_list)");
	_rexActionList.push_back("int PvexDrawWalsh(int *num_objects, int *obj_list, int *pattern_list, int *size_list, int *contrast_list)");
	_rexActionList.push_back("int PvexEraseMethod(int *method)");
	_rexActionList.push_back("int PvexFlowDirectionRange(int *nObjects, int *objList, int *rangeList)");
	_rexActionList.push_back("int PvexFlowSpeedRange(int *nObjects, int *objList, int *speedList);");
	_rexActionList.push_back("int PvexLoadPatterns(int *num_objects, int *obj_list, int *stim_list, int *size_list, int *row_list,int *col_list, int *check_list)");
	_rexActionList.push_back("int PvexLoadPointArray(int *object, int *num_points, int *size, int *point_list)");
	_rexActionList.push_back("int PvexLoadRamp(int *num_ramps, int *ramp_list, int *action_list, int *step_list, float *x_list, float *y_list)");
	_rexActionList.push_back("int PvexLoadSound(int *nObjects, int *objList, int *sndList)");
	_rexActionList.push_back("int PvexMakeFlowMovie(int *num_objects, int *num_frames, int *object_list)");
	_rexActionList.push_back("int PvexMaskFlowField(int *num_objects, int *obj_list, int *width_list, int *height_list, int *x_list, int *y_list)");
	_rexActionList.push_back("int PvexMessage(unsigned char *codd, int *x, int *y)");
	_rexActionList.push_back("int PvexNewFlow(int *num_objects, int *obj_list, int *xy_list, int *z_list, int *velocity_list, int *roll_list, int *pitch_list, int *yaw_list, int *span_list, int *coherance_list)");
	_rexActionList.push_back("int PvexNewRamp(int *num_ramps, int *ramp_list, int *length_list, int *direction_list, int *velocity_list, int *x_list, int *y_list, int *type_list, int *action_list)");
	_rexActionList.push_back("int PvexNewRampFromFixPoint(int *num_ramps, int *ramp_list, int *length_list, int *direction_list, int *velocity_list, int *x_list, int *y_list, int *type_list, int *action_list)");
	_rexActionList.push_back("int PvexPreloadStim(int *num_objects, int *obj_list, int *switch_list)");
	_rexActionList.push_back("int PvexReportLocation(int *obj_num)");
	_rexActionList.push_back("int PvexResetRamps(void)");
	_rexActionList.push_back("int PvexRotateObject(int *num_objects, int *obj_list, float *x_list, float *y_list, float *z_list)");
	_rexActionList.push_back("int PvexSequenceStim(int *n_frst_objs, int *frst_obj_lst, int *n_frst_fields, int *gap_fields, int *n_scnd_objs, int *scnd_obj_lst, int *n_scnd_fields)");
	_rexActionList.push_back("int PvexSetActiveObject(int *obj_num)");
	_rexActionList.push_back("int PvexSetAliasing(int *num_objects, int *obj_list, int *alias_list)");
	_rexActionList.push_back("int PvexSetBackLum(int *red, int *green, int *blue)");
	_rexActionList.push_back("int PvexSetColorMask(int *num_objects, int *obj_list, int *red_list, int *green_list, int *blue_list, int *alpha_list)");
	_rexActionList.push_back("int PvexSetFixColors(int *on_red, int *on_green, int *on_blue, int *dim_red, int *dim_green, int *dim_blue)");
	_rexActionList.push_back("int PvexSetFixLocation(float *x, float *y)");
	_rexActionList.push_back("int PvexSetFixSiz(int *size)");
	_rexActionList.push_back("int PvexSetGrayScale(int *start_element)");
	_rexActionList.push_back("int PvexSetLutEntryClr(int *num_entries, int *entry_list, int *red_list, int *green_list, int *blue_list)");
	_rexActionList.push_back("int PvexSetObjectGrayScale(int *num_objects, int *obj_list, int *start_list, int *num_list)");
	_rexActionList.push_back("int PvexSetObjetcLutEntryClr(int *num_objects, int *obj_list, int *num_entries, int *entry_list, int *red_list, int *green_list, int *blue_list)");
	_rexActionList.push_back("int PvexSetRexScale(int *distance, int *width)");
	_rexActionList.push_back("int PvexSetStimColors(int *num_objects, int *obj_list, int *fg_red_list, int *fg_green_list, int *fg_blue_list, int *bg_red_list, int *bg_green_list, int *bg_blue_list)");
	_rexActionList.push_back("int PvexSetStimLuminances(int *num_objects, int *obj_list, int *fg_list, int *bg_list)");
	_rexActionList.push_back("int PvexSetStimSwitch(int *num_objects, int *obj_list, int *switch_list)");
	_rexActionList.push_back("int PvexSetTransparency(int *nObjects, int *objList, int *transList)");
	_rexActionList.push_back("int PvexSetTriggers(int *num_triggers, int *ramp_list, int *trigger_list, int *frame_list)");
	_rexActionList.push_back("int PvexShiftFlow(int *num_objects, int *obj_list, int *xy_list, int *z_list, int *velocity_list, int *roll_list, int *pitch_list, int *yaw_list, int *span_list, int *coherance_list)");
	_rexActionList.push_back("int PvexShiftLocation(int *num_objects, int *obj_list, float *x_list, float *y_list)");
	_rexActionList.push_back("int PvexShowFlowMovie(int *num_objects, int *start_frame, int *last_frame, int *object_list)");
	_rexActionList.push_back("int PvexShowMovieClip(int *num_clips, int *object_list, int num_frames, int *interval, int *cycles)");
	_rexActionList.push_back("int PvexStartFlow(int *num_objects, int *obj_list)");
	_rexActionList.push_back("int PvexStartFlowRamp(int *num_flows, int *flow_list, int *num_ramps, int *ramp_list, int *object_list)");
	_rexActionList.push_back("int PvexStartGratingRamp(int *nObjects, int *gratingList, int *rmpList)");
	_rexActionList.push_back("int PvexStartOkn(int *num_objects, int *obj_list)");
	_rexActionList.push_back("int PvexStartRamp(int *num_ramps, int *ramp_list, int *object_list, int *cycle_list)");
	_rexActionList.push_back("int PvexStartSine(int *nObjects, int *objList)");
	_rexActionList.push_back("int PvexStartSquare(int *nObjects, int *objList)");
	_rexActionList.push_back("int PvexStimFromFixPoint(int *num_objects, int *obj_list, float *x_list, float *y_list)");
	_rexActionList.push_back("int PvexStimLocation(int *num_objects, int *obj_list, float *x_list, float *y_list)");
	_rexActionList.push_back("int PvexStopFlowRamp(void)");
	_rexActionList.push_back("int PvexStopMovie(void)");
	_rexActionList.push_back("int PvexStopOkn(void)");
	_rexActionList.push_back("int PvexStopSine(void)");
	_rexActionList.push_back("int PvexStopSquare(void)");
	_rexActionList.push_back("int PvexSwapBuffers(void)");
	_rexActionList.push_back("int PvexSwitchFix(int *flag)");
	_rexActionList.push_back("int PvexSwitchStim(int *num_objects, int *obj_list, int *switch_list)");
	_rexActionList.push_back("int PvexTimeFlow(int *num_objects, int *num_fields, int *object_list)");
	_rexActionList.push_back("int PvexTimeGrating(int *nObjects, int *cycles, int *objList)");
	_rexActionList.push_back("int PvexTimeStim(int *num_objects, int *obj_list, int *num_fields)");
	_rexActionList.push_back("int PvexToFlowMovieStart(int *num_objects, int *start_frames, int *object_list)");
	_rexActionList.push_back("int PvexToRampStart(int *num_objects, int *obj_list, int *ramp_list)");
	_rexActionList.push_back("int PvexVideoSync(int *sync)");
}

#endif 
