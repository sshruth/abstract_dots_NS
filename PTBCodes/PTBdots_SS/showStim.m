function showStim(stimIndex)% This function shows n stimuli simultaneously on the screen.global NSTIM GRID_SIZE_PIX STIM_SIZE_PIX LENGTH CUR_WINDOW SCREEN_RECTglobal STIM_COLOR T1_COLOR T2_COLORglobal NSHOW SPACE TRIANGLE PENTA ARC STAR4 ARCRECT XGRID YGRIDSTIM_COLOR = T_WHITE_INDEX;T1_COLOR = T_RED_INDEX;% Fixation point% showFP;coco=0.3;color=floor(rand*10);cont=1;if size(SPACE,2)==2	while (cont)		j=floor(rand*2+1);		k=floor(rand*2);		if SPACE(j,k+1)==0			h=XGRID(k*2+j);			v=YGRID(k*2+j);			SPACE(j,k+1)=1;			cont=0;		end	endelseif size(SPACE,2)==1	while (cont)		j= 1;% floor(rand*2+1); % j = 1 or 2		if SPACE(j,1)==0			h=XGRID(j);			v=YGRID(j);			SPACE(j,1)=1;			cont=0;		end	end		end% Show FPScreen('FillOval',CUR_WINDOW,FP_COLOR,[CENTER_X-FP_SIZE_PIX/2 ...                                       CENTER_Y-FP_SIZE_PIX/2 ...                                       CENTER_X+FP_SIZE_PIX/2 ...                                       CENTER_Y+FP_SIZE_PIX/2]);switch stimIndexcase 0,	%e=(GRID_SIZE_PIX-LENGTH/pi)/2;	%Screen(CUR_WINDOW,'FrameOval',STIM_COLOR,[h+e v+e h+GRID_SIZE_PIX-e v+GRID_SIZE_PIX-e], 2, 2);	e=LENGTH/(2+pi);	if color>8		CLR=T2_COLOR*coco+STIM_COLOR*(1-coco);	else		CLR=STIM_COLOR;	end		Screen(CUR_WINDOW,'FrameArc',CLR,[h+GRID_SIZE_PIX/2-e v+GRID_SIZE_PIX/2-e/2 h+GRID_SIZE_PIX/2+e+1 v+GRID_SIZE_PIX/2+3/2*e+1],-90,180,4);	Screen(CUR_WINDOW,'Drawline',CLR,h+GRID_SIZE_PIX/2-e,v+GRID_SIZE_PIX/2+e/2,h+GRID_SIZE_PIX/2+e,v+GRID_SIZE_PIX/2+e/2, 4);		case 1,	e=sqrt(2)*STIM_SIZE_PIX/2;	if color>8		CLR=T1_COLOR*coco+STIM_COLOR*(1-coco);	else		CLR=STIM_COLOR;	end	Screen(CUR_WINDOW,'Drawline',CLR,h+GRID_SIZE_PIX/2-e,v+GRID_SIZE_PIX/2,h+GRID_SIZE_PIX/2,v+GRID_SIZE_PIX/2-e, 4);	Screen(CUR_WINDOW,'Drawline',CLR,h+GRID_SIZE_PIX/2,v+GRID_SIZE_PIX/2-e,h+GRID_SIZE_PIX/2+e,v+GRID_SIZE_PIX/2, 4);	Screen(CUR_WINDOW,'Drawline',CLR,h+GRID_SIZE_PIX/2+e,v+GRID_SIZE_PIX/2,h+GRID_SIZE_PIX/2,v+GRID_SIZE_PIX/2+e, 4);	Screen(CUR_WINDOW,'Drawline',CLR,h+GRID_SIZE_PIX/2-e,v+GRID_SIZE_PIX/2,h+GRID_SIZE_PIX/2,v+GRID_SIZE_PIX/2+e, 4);	case 2,	e=(GRID_SIZE_PIX-STIM_SIZE_PIX)/2;	Screen(CUR_WINDOW,'FrameRect',STIM_COLOR,[h+e v+e h+GRID_SIZE_PIX-e v+GRID_SIZE_PIX-e], 2);case 3,	s=zeros(3,2);	s(:,1)=TRIANGLE(:,1)+h;	s(:,2)=TRIANGLE(:,2)+v;	Screen(CUR_WINDOW,'Drawline',STIM_COLOR,s(1,1),s(1,2),s(2,1),s(2,2),2);	Screen(CUR_WINDOW,'Drawline',STIM_COLOR,s(1,1),s(1,2),s(3,1),s(3,2),2);	Screen(CUR_WINDOW,'Drawline',STIM_COLOR,s(2,1),s(2,2),s(3,1),s(3,2),2);case 4,					s=zeros(5,2);	s(:,1)=PENTA(:,1)+h;	s(:,2)=PENTA(:,2)+v;	for i=1:4		Screen(CUR_WINDOW,'Drawline',STIM_COLOR,s(i,1),s(i,2),s(i+1,1),s(i+1,2),2);	end	Screen(CUR_WINDOW,'Drawline',STIM_COLOR,s(1,1),s(1,2),s(5,1),s(5,2),2);	case 5,	s=zeros(8,2);	s(:,1)=STAR4(:,1)+h;	s(:,2)=STAR4(:,2)+v;	for i=1:7		Screen(CUR_WINDOW,'Drawline',STIM_COLOR,s(i,1),s(i,2),s(i+1,1),s(i+1,2),2);	end	Screen(CUR_WINDOW,'Drawline',STIM_COLOR,s(1,1),s(1,2),s(8,1),s(8,2),2);case 6,	Screen(CUR_WINDOW,'FrameArc',STIM_COLOR,[ARCRECT(1)+h ARCRECT(2)+v ARCRECT(3)+h ARCRECT(4)+v],-30,60,2);	s=zeros(3,2);	s(:,1)=ARC(:,1)+h;	s(:,2)=ARC(:,2)+v;	Screen(CUR_WINDOW,'Drawline',STIM_COLOR,s(1,1),s(1,2),s(2,1),s(2,2),2);	Screen(CUR_WINDOW,'Drawline',STIM_COLOR,s(1,1),s(1,2),s(3,1),s(3,2),2);	case 7,	e=LENGTH/8;	Screen(CUR_WINDOW,'Drawline',STIM_COLOR,h+GRID_SIZE_PIX/2-e,v+GRID_SIZE_PIX/2-sqrt(3)/2*e,h+GRID_SIZE_PIX/2+e,v+GRID_SIZE_PIX/2-sqrt(3)/2*e, 2);	Screen(CUR_WINDOW,'Drawline',STIM_COLOR,h+GRID_SIZE_PIX/2-e,v+GRID_SIZE_PIX/2+sqrt(3)/2*e,h+GRID_SIZE_PIX/2+e,v+GRID_SIZE_PIX/2+sqrt(3)/2*e, 2);	Screen(CUR_WINDOW,'Drawline',STIM_COLOR,h+GRID_SIZE_PIX/2-e,v+GRID_SIZE_PIX/2-sqrt(3)/2*e,h+GRID_SIZE_PIX/2-e/2,v+GRID_SIZE_PIX/2, 2);	Screen(CUR_WINDOW,'Drawline',STIM_COLOR,h+GRID_SIZE_PIX/2-e,v+GRID_SIZE_PIX/2+sqrt(3)/2*e,h+GRID_SIZE_PIX/2-e/2,v+GRID_SIZE_PIX/2, 2);	Screen(CUR_WINDOW,'Drawline',STIM_COLOR,h+GRID_SIZE_PIX/2+e,v+GRID_SIZE_PIX/2-sqrt(3)/2*e,h+GRID_SIZE_PIX/2+e/2,v+GRID_SIZE_PIX/2, 2);	Screen(CUR_WINDOW,'Drawline',STIM_COLOR,h+GRID_SIZE_PIX/2+e,v+GRID_SIZE_PIX/2+sqrt(3)/2*e,h+GRID_SIZE_PIX/2+e/2,v+GRID_SIZE_PIX/2, 2);	case 8,	e=LENGTH/(3*pi/2+2*sqrt(2));	Screen(CUR_WINDOW,'FrameArc',STIM_COLOR,[h+GRID_SIZE_PIX/2-e v+GRID_SIZE_PIX/2-e h+GRID_SIZE_PIX/2+e v+GRID_SIZE_PIX/2+e],-45,-270,2);	Screen(CUR_WINDOW,'Drawline',STIM_COLOR,h+GRID_SIZE_PIX/2-e,v+GRID_SIZE_PIX/2-e,h+GRID_SIZE_PIX/2+e,v+GRID_SIZE_PIX/2-e, 2);	Screen(CUR_WINDOW,'Drawline',STIM_COLOR,h+GRID_SIZE_PIX/2-e,v+GRID_SIZE_PIX/2-e,h+GRID_SIZE_PIX/2-sqrt(2)/2*e,v+GRID_SIZE_PIX/2-sqrt(2)/2*e, 2);	Screen(CUR_WINDOW,'Drawline',STIM_COLOR,h+GRID_SIZE_PIX/2+e,v+GRID_SIZE_PIX/2-e,h+GRID_SIZE_PIX/2+sqrt(2)/2*e,v+GRID_SIZE_PIX/2-sqrt(2)/2*e, 2);	case 9,	e=LENGTH/(5*pi/3+sqrt(10)/2);	Screen(CUR_WINDOW,'FrameArc',STIM_COLOR,[h+GRID_SIZE_PIX/2-e v+GRID_SIZE_PIX/2-e h+GRID_SIZE_PIX/2+e+2 v+GRID_SIZE_PIX/2+e],-150,300,2);	Screen(CUR_WINDOW,'Drawline',STIM_COLOR,h+GRID_SIZE_PIX/2,v+GRID_SIZE_PIX/2-e/2,h+(GRID_SIZE_PIX-e)*0.5,v+0.5*(GRID_SIZE_PIX+e)+2, 2);	Screen(CUR_WINDOW,'Drawline',STIM_COLOR,h+GRID_SIZE_PIX/2,v+GRID_SIZE_PIX/2-e/2,h+(GRID_SIZE_PIX+e)*0.5,v+0.5*(GRID_SIZE_PIX+e)+2, 2);	otherwise,	fprintf('wrong stim number');end