function showStimWithLocaction(trialIndex, stimCount, showNum, config)% This function shows n stimuli simultaneously on the screen.declareGlobals;global NSTIM GRID_SIZE_PIX STIM_SIZE_PIX LENGTH CUR_WINDOW FP_SIZE_PIXglobal STIM_COLOR TARGET_SIZE_PIX CENTER_X CENTER_Y FP_COLOR TX TY T2X T2Yglobal STIM_PLACE SPACE TRIANGLE PENTA ARC STAR4 ARCRECT XGRID YGRID MONKEY_IDglobal CONFIG NTARGET DIMif nargin==4    CONFIG = config;endtrialIndex_tmp = trialIndex;% presenting shapes in a reversed order from trialIndexfor i = 1:showNum    stimVec(i) = mod(trialIndex_tmp,10);    trialIndex_tmp = floor(trialIndex_tmp/10);end% showing a fixation pointScreen('FillOval',CUR_WINDOW,FP_COLOR,[CENTER_X-FP_SIZE_PIX/2 ...									   CENTER_Y-FP_SIZE_PIX/2 ...									   CENTER_X+FP_SIZE_PIX/2 ...									   CENTER_Y+FP_SIZE_PIX/2]);% flashing a light at the cornerif mod(stimCount+1,2)    %Screen('FillOval',CUR_WINDOW,FP_COLOR,[0 0 100 100]);end                                                                      if stimCount == showNum    if size(SPACE,2)==2        STIM_PLACE = randperm(4);    elseif size(SPACE,2)==1        STIM_PLACE = randperm(2);    endendswitch MONKEY_ID    case 1        % init = 1; % the shapes remain on the screen after the next shape        init = showNum-stimCount+1; % changed by SK 07/26/11    case 2        init = showNum-stimCount+1;endfor stimOrderInd = init:(showNum-stimCount+1)    h=XGRID(STIM_PLACE(stimOrderInd));    v=YGRID(STIM_PLACE(stimOrderInd));        stimIndex = stimVec(stimOrderInd);    % e=TARGET_SIZE_PIX/2;    % x = targetX * PIX_PER_DEG /10 + CENTER_X;    % y = -targetY * PIX_PER_DEG /10 + CENTER_Y;    %     % h = (CENTER_X-GRID_SIZE_PIX/2)*prox+(1-prox)*x - GRID_SIZE_PIX/2;    % v = (CENTER_Y-GRID_SIZE_PIX/2)*prox+(1-prox)*y - GRID_SIZE_PIX/2;    %[x y h v]    switch stimIndex    case 0,        %e=(GRID_SIZE_PIX-LENGTH/pi)/2;        %Screen(CUR_WINDOW,'FrameOval',STIM_COLOR,[h+e v+e h+GRID_SIZE_PIX-e v+GRID_SIZE_PIX-e], 2, 2);        e=LENGTH/(2+pi);        CLR=STIM_COLOR;        Screen('FrameArc',CUR_WINDOW,CLR,[h+GRID_SIZE_PIX/2-e v+GRID_SIZE_PIX/2-e/2 h+GRID_SIZE_PIX/2+e+1 v+GRID_SIZE_PIX/2+3/2*e+1],-90,180,2);        Screen('Drawline',CUR_WINDOW,CLR,h+GRID_SIZE_PIX/2-e,v+GRID_SIZE_PIX/2+e/2,h+GRID_SIZE_PIX/2+e,v+GRID_SIZE_PIX/2+e/2, 2);    case 1,        e=sqrt(2)*STIM_SIZE_PIX/2;        CLR=STIM_COLOR;        Screen('Drawline',CUR_WINDOW,CLR,h+GRID_SIZE_PIX/2-e,v+GRID_SIZE_PIX/2,h+GRID_SIZE_PIX/2,v+GRID_SIZE_PIX/2-e, 2);        Screen('Drawline',CUR_WINDOW,CLR,h+GRID_SIZE_PIX/2,v+GRID_SIZE_PIX/2-e,h+GRID_SIZE_PIX/2+e,v+GRID_SIZE_PIX/2, 2);        Screen('Drawline',CUR_WINDOW,CLR,h+GRID_SIZE_PIX/2+e,v+GRID_SIZE_PIX/2,h+GRID_SIZE_PIX/2,v+GRID_SIZE_PIX/2+e, 2);        Screen('Drawline',CUR_WINDOW,CLR,h+GRID_SIZE_PIX/2-e,v+GRID_SIZE_PIX/2,h+GRID_SIZE_PIX/2,v+GRID_SIZE_PIX/2+e, 2);    case 2,        switch MONKEY_ID            case 1, % T shape for Eli                e=(GRID_SIZE_PIX-STIM_SIZE_PIX)/2;                CLR=STIM_COLOR;                Screen('Drawline',CUR_WINDOW,CLR,h+e,v+e,h+e,v+e+STIM_SIZE_PIX/2, 2);                Screen('Drawline',CUR_WINDOW,CLR,h+e,v+e+STIM_SIZE_PIX/2,h+e+STIM_SIZE_PIX/3,v+e+STIM_SIZE_PIX/2, 2);                Screen('Drawline',CUR_WINDOW,CLR,h+e+STIM_SIZE_PIX/3,v+e+STIM_SIZE_PIX/2,h+e+STIM_SIZE_PIX/3,v+e+STIM_SIZE_PIX, 2);                Screen('Drawline',CUR_WINDOW,CLR,h+e+STIM_SIZE_PIX/3,v+e+STIM_SIZE_PIX,h+e+STIM_SIZE_PIX*2/3,v+e+STIM_SIZE_PIX, 2);                    Screen('Drawline',CUR_WINDOW,CLR,h+e+STIM_SIZE_PIX*2/3,v+e+STIM_SIZE_PIX,h+e+STIM_SIZE_PIX*2/3,v+e+STIM_SIZE_PIX/2, 2);                Screen('Drawline',CUR_WINDOW,CLR,h+e+STIM_SIZE_PIX*2/3,v+e+STIM_SIZE_PIX/2,h+e+STIM_SIZE_PIX,v+e+STIM_SIZE_PIX/2, 2);                Screen('Drawline',CUR_WINDOW,CLR,h+e+STIM_SIZE_PIX,v+e+STIM_SIZE_PIX/2,h+e+STIM_SIZE_PIX, v+e, 2);                Screen('Drawline',CUR_WINDOW,CLR,h+e+STIM_SIZE_PIX,v+e,h+e,v+e, 2);            case 2 % Square for Joey                e=(GRID_SIZE_PIX-STIM_SIZE_PIX)/2;                Screen('FrameRect',CUR_WINDOW,STIM_COLOR,[h+e,v+e,h+GRID_SIZE_PIX-e,v+GRID_SIZE_PIX-e],2);        end    case 3,        s=zeros(3,2);        s(:,1)=TRIANGLE(:,1)+h;        s(:,2)=TRIANGLE(:,2)+v;        Screen('Drawline',CUR_WINDOW,STIM_COLOR,s(1,1),s(1,2),s(2,1),s(2,2),2);        Screen('Drawline',CUR_WINDOW,STIM_COLOR,s(1,1),s(1,2),s(3,1),s(3,2),2);        Screen('Drawline',CUR_WINDOW,STIM_COLOR,s(2,1),s(2,2),s(3,1),s(3,2),2);    case 4,				        s=zeros(5,2);        s(:,1)=PENTA(:,1)+h;        s(:,2)=PENTA(:,2)+v;        for i=1:4            Screen('Drawline',CUR_WINDOW,STIM_COLOR,s(i,1),s(i,2),s(i+1,1),s(i+1,2),2);        end        Screen('Drawline',CUR_WINDOW,STIM_COLOR,s(1,1),s(1,2),s(5,1),s(5,2),2);    case 5,        s=zeros(8,2);        s(:,1)=STAR4(:,1)+h;        s(:,2)=STAR4(:,2)+v;        for i=1:7            Screen('Drawline',CUR_WINDOW,STIM_COLOR,s(i,1),s(i,2),s(i+1,1),s(i+1,2),2);        end        Screen('Drawline',CUR_WINDOW,STIM_COLOR,s(1,1),s(1,2),s(8,1),s(8,2),2);    case 6,        Screen('FrameArc',CUR_WINDOW,STIM_COLOR,[ARCRECT(1)+h ARCRECT(2)+v ARCRECT(3)+h ARCRECT(4)+v],-30,60,2);        s=zeros(3,2);        s(:,1)=ARC(:,1)+h;        s(:,2)=ARC(:,2)+v;        Screen('Drawline',CUR_WINDOW,STIM_COLOR,s(1,1),s(1,2),s(2,1),s(2,2),2);        Screen('Drawline',CUR_WINDOW,STIM_COLOR,s(1,1),s(1,2),s(3,1),s(3,2),2);    case 7,        e=LENGTH/8;        Screen('Drawline',CUR_WINDOW,STIM_COLOR,h+GRID_SIZE_PIX/2-e,v+GRID_SIZE_PIX/2-sqrt(3)/2*e,h+GRID_SIZE_PIX/2+e,v+GRID_SIZE_PIX/2-sqrt(3)/2*e, 2);        Screen('Drawline',CUR_WINDOW,STIM_COLOR,h+GRID_SIZE_PIX/2-e,v+GRID_SIZE_PIX/2+sqrt(3)/2*e,h+GRID_SIZE_PIX/2+e,v+GRID_SIZE_PIX/2+sqrt(3)/2*e, 2);        Screen('Drawline',CUR_WINDOW,STIM_COLOR,h+GRID_SIZE_PIX/2-e,v+GRID_SIZE_PIX/2-sqrt(3)/2*e,h+GRID_SIZE_PIX/2-e/2,v+GRID_SIZE_PIX/2, 2);        Screen('Drawline',CUR_WINDOW,STIM_COLOR,h+GRID_SIZE_PIX/2-e,v+GRID_SIZE_PIX/2+sqrt(3)/2*e,h+GRID_SIZE_PIX/2-e/2,v+GRID_SIZE_PIX/2, 2);        Screen('Drawline',CUR_WINDOW,STIM_COLOR,h+GRID_SIZE_PIX/2+e,v+GRID_SIZE_PIX/2-sqrt(3)/2*e,h+GRID_SIZE_PIX/2+e/2,v+GRID_SIZE_PIX/2, 2);        Screen('Drawline',CUR_WINDOW,STIM_COLOR,h+GRID_SIZE_PIX/2+e,v+GRID_SIZE_PIX/2+sqrt(3)/2*e,h+GRID_SIZE_PIX/2+e/2,v+GRID_SIZE_PIX/2, 2);    case 8,        e=LENGTH/(3*pi/2+2*sqrt(2));        Screen('FrameArc',CUR_WINDOW,STIM_COLOR,[h+GRID_SIZE_PIX/2-e v+GRID_SIZE_PIX/2-e h+GRID_SIZE_PIX/2+e v+GRID_SIZE_PIX/2+e],-45,-270,2);        Screen('Drawline',CUR_WINDOW,STIM_COLOR,h+GRID_SIZE_PIX/2-e,v+GRID_SIZE_PIX/2-e,h+GRID_SIZE_PIX/2+e,v+GRID_SIZE_PIX/2-e, 2);        Screen('Drawline',CUR_WINDOW,STIM_COLOR,h+GRID_SIZE_PIX/2-e,v+GRID_SIZE_PIX/2-e,h+GRID_SIZE_PIX/2-sqrt(2)/2*e,v+GRID_SIZE_PIX/2-sqrt(2)/2*e, 2);        Screen('Drawline',CUR_WINDOW,STIM_COLOR,h+GRID_SIZE_PIX/2+e,v+GRID_SIZE_PIX/2-e,h+GRID_SIZE_PIX/2+sqrt(2)/2*e,v+GRID_SIZE_PIX/2-sqrt(2)/2*e, 2);    case 9,        e=LENGTH/(5*pi/3+sqrt(10)/2);        Screen('FrameArc',CUR_WINDOW,STIM_COLOR,[h+GRID_SIZE_PIX/2-e v+GRID_SIZE_PIX/2-e h+GRID_SIZE_PIX/2+e+2 v+GRID_SIZE_PIX/2+e],-150,300,2);        Screen('Drawline',CUR_WINDOW,STIM_COLOR,h+GRID_SIZE_PIX/2,v+GRID_SIZE_PIX/2-e/2,h+(GRID_SIZE_PIX-e)*0.5,v+0.5*(GRID_SIZE_PIX+sqrt(3)*e), 2);        Screen('Drawline',CUR_WINDOW,STIM_COLOR,h+GRID_SIZE_PIX/2,v+GRID_SIZE_PIX/2-e/2,h+(GRID_SIZE_PIX+e)*0.5,v+0.5*(GRID_SIZE_PIX+sqrt(3)*e), 2);    otherwise,        fprintf('wrong stim number');    endend% Redraw targets for Joey%if MONKEY_ID ==2if ~CONFIG    DIM = 0;endshowTarget(NTARGET, TX, TY, T2X, T2Y, NaN, 1, CONFIG, MONKEY_ID, DIM, T_ANGLE_OFFSET)if stimCount == 1    DONTCLEAR = 0;end%endScreen('DrawingFinished',CUR_WINDOW);Screen('Flip',CUR_WINDOW);