function showStimNew(stimIndex, loc)% This function shows n stimuli simultaneously on the screen.declareGlobals;global GRID_SIZE_PIX STIM_SIZE_PIX LENGTH CUR_WINDOW FP_SIZE_PIXglobal STIM_COLOR CENTER_X CENTER_Y FP_COLOR TX TY T2X T2Yglobal TRIANGLE PENTA ARC STAR4 ARCRECT XGRID YGRID MONKEY_IDglobal CONFIG NTARGET DIM% showing a fixation pointshowFP(1,0);% flashing a light at the corner% if mod(stimCount+1,2)%     %Screen('FillOval',CUR_WINDOW,FP_COLOR,[0 0 100 100]);% endh=XGRID(loc);v=YGRID(loc);switch stimIndexcase 0,    %e=(GRID_SIZE_PIX-LENGTH/pi)/2;    %Screen(CUR_WINDOW,'FrameOval',STIM_COLOR,[h+e v+e h+GRID_SIZE_PIX-e v+GRID_SIZE_PIX-e], 2, 2);    e=LENGTH/(2+pi);    CLR=STIM_COLOR;    Screen('FrameArc',CUR_WINDOW,CLR,[h+GRID_SIZE_PIX/2-e v+GRID_SIZE_PIX/2-e/2 h+GRID_SIZE_PIX/2+e+1 v+GRID_SIZE_PIX/2+3/2*e+1],-90,180,2);    Screen('Drawline',CUR_WINDOW,CLR,h+GRID_SIZE_PIX/2-e,v+GRID_SIZE_PIX/2+e/2,h+GRID_SIZE_PIX/2+e,v+GRID_SIZE_PIX/2+e/2, 2);case 1,    e=sqrt(2)*STIM_SIZE_PIX/2;    CLR=STIM_COLOR;    Screen('Drawline',CUR_WINDOW,CLR,h+GRID_SIZE_PIX/2-e,v+GRID_SIZE_PIX/2,h+GRID_SIZE_PIX/2,v+GRID_SIZE_PIX/2-e, 2);    Screen('Drawline',CUR_WINDOW,CLR,h+GRID_SIZE_PIX/2,v+GRID_SIZE_PIX/2-e,h+GRID_SIZE_PIX/2+e,v+GRID_SIZE_PIX/2, 2);    Screen('Drawline',CUR_WINDOW,CLR,h+GRID_SIZE_PIX/2+e,v+GRID_SIZE_PIX/2,h+GRID_SIZE_PIX/2,v+GRID_SIZE_PIX/2+e, 2);    Screen('Drawline',CUR_WINDOW,CLR,h+GRID_SIZE_PIX/2-e,v+GRID_SIZE_PIX/2,h+GRID_SIZE_PIX/2,v+GRID_SIZE_PIX/2+e, 2);case 2,    switch MONKEY_ID        case 1, % T shape for Eli            e=(GRID_SIZE_PIX-STIM_SIZE_PIX)/2;            CLR=STIM_COLOR;            Screen('Drawline',CUR_WINDOW,CLR,h+e,v+e,h+e,v+e+STIM_SIZE_PIX/2, 2);            Screen('Drawline',CUR_WINDOW,CLR,h+e,v+e+STIM_SIZE_PIX/2,h+e+STIM_SIZE_PIX/3,v+e+STIM_SIZE_PIX/2, 2);            Screen('Drawline',CUR_WINDOW,CLR,h+e+STIM_SIZE_PIX/3,v+e+STIM_SIZE_PIX/2,h+e+STIM_SIZE_PIX/3,v+e+STIM_SIZE_PIX, 2);            Screen('Drawline',CUR_WINDOW,CLR,h+e+STIM_SIZE_PIX/3,v+e+STIM_SIZE_PIX,h+e+STIM_SIZE_PIX*2/3,v+e+STIM_SIZE_PIX, 2);                Screen('Drawline',CUR_WINDOW,CLR,h+e+STIM_SIZE_PIX*2/3,v+e+STIM_SIZE_PIX,h+e+STIM_SIZE_PIX*2/3,v+e+STIM_SIZE_PIX/2, 2);            Screen('Drawline',CUR_WINDOW,CLR,h+e+STIM_SIZE_PIX*2/3,v+e+STIM_SIZE_PIX/2,h+e+STIM_SIZE_PIX,v+e+STIM_SIZE_PIX/2, 2);            Screen('Drawline',CUR_WINDOW,CLR,h+e+STIM_SIZE_PIX,v+e+STIM_SIZE_PIX/2,h+e+STIM_SIZE_PIX, v+e, 2);            Screen('Drawline',CUR_WINDOW,CLR,h+e+STIM_SIZE_PIX,v+e,h+e,v+e, 2);        case 2 % Square for Joey            e=(GRID_SIZE_PIX-STIM_SIZE_PIX)/2;            Screen('FrameRect',CUR_WINDOW,STIM_COLOR,[h+e,v+e,h+GRID_SIZE_PIX-e,v+GRID_SIZE_PIX-e],2);    endcase 3,    s=zeros(3,2);    s(:,1)=TRIANGLE(:,1)+h;    s(:,2)=TRIANGLE(:,2)+v;    Screen('Drawline',CUR_WINDOW,STIM_COLOR,s(1,1),s(1,2),s(2,1),s(2,2),2);    Screen('Drawline',CUR_WINDOW,STIM_COLOR,s(1,1),s(1,2),s(3,1),s(3,2),2);    Screen('Drawline',CUR_WINDOW,STIM_COLOR,s(2,1),s(2,2),s(3,1),s(3,2),2);case 4,				    s=zeros(5,2);    s(:,1)=PENTA(:,1)+h;    s(:,2)=PENTA(:,2)+v;    for i=1:4        Screen('Drawline',CUR_WINDOW,STIM_COLOR,s(i,1),s(i,2),s(i+1,1),s(i+1,2),2);    end    Screen('Drawline',CUR_WINDOW,STIM_COLOR,s(1,1),s(1,2),s(5,1),s(5,2),2);case 5,    s=zeros(8,2);    s(:,1)=STAR4(:,1)+h;    s(:,2)=STAR4(:,2)+v;    for i=1:7        Screen('Drawline',CUR_WINDOW,STIM_COLOR,s(i,1),s(i,2),s(i+1,1),s(i+1,2),2);    end    Screen('Drawline',CUR_WINDOW,STIM_COLOR,s(1,1),s(1,2),s(8,1),s(8,2),2);case 6,    Screen('FrameArc',CUR_WINDOW,STIM_COLOR,[ARCRECT(1)+h ARCRECT(2)+v ARCRECT(3)+h ARCRECT(4)+v],-30,60,2);    s=zeros(3,2);    s(:,1)=ARC(:,1)+h;    s(:,2)=ARC(:,2)+v;    Screen('Drawline',CUR_WINDOW,STIM_COLOR,s(1,1),s(1,2),s(2,1),s(2,2),2);    Screen('Drawline',CUR_WINDOW,STIM_COLOR,s(1,1),s(1,2),s(3,1),s(3,2),2);case 7,    e=LENGTH/8;    Screen('Drawline',CUR_WINDOW,STIM_COLOR,h+GRID_SIZE_PIX/2-e,v+GRID_SIZE_PIX/2-sqrt(3)/2*e,h+GRID_SIZE_PIX/2+e,v+GRID_SIZE_PIX/2-sqrt(3)/2*e, 2);    Screen('Drawline',CUR_WINDOW,STIM_COLOR,h+GRID_SIZE_PIX/2-e,v+GRID_SIZE_PIX/2+sqrt(3)/2*e,h+GRID_SIZE_PIX/2+e,v+GRID_SIZE_PIX/2+sqrt(3)/2*e, 2);    Screen('Drawline',CUR_WINDOW,STIM_COLOR,h+GRID_SIZE_PIX/2-e,v+GRID_SIZE_PIX/2-sqrt(3)/2*e,h+GRID_SIZE_PIX/2-e/2,v+GRID_SIZE_PIX/2, 2);    Screen('Drawline',CUR_WINDOW,STIM_COLOR,h+GRID_SIZE_PIX/2-e,v+GRID_SIZE_PIX/2+sqrt(3)/2*e,h+GRID_SIZE_PIX/2-e/2,v+GRID_SIZE_PIX/2, 2);    Screen('Drawline',CUR_WINDOW,STIM_COLOR,h+GRID_SIZE_PIX/2+e,v+GRID_SIZE_PIX/2-sqrt(3)/2*e,h+GRID_SIZE_PIX/2+e/2,v+GRID_SIZE_PIX/2, 2);    Screen('Drawline',CUR_WINDOW,STIM_COLOR,h+GRID_SIZE_PIX/2+e,v+GRID_SIZE_PIX/2+sqrt(3)/2*e,h+GRID_SIZE_PIX/2+e/2,v+GRID_SIZE_PIX/2, 2);case 8,    e=LENGTH/(3*pi/2+2*sqrt(2));    Screen('FrameArc',CUR_WINDOW,STIM_COLOR,[h+GRID_SIZE_PIX/2-e v+GRID_SIZE_PIX/2-e h+GRID_SIZE_PIX/2+e v+GRID_SIZE_PIX/2+e],-45,-270,2);    Screen('Drawline',CUR_WINDOW,STIM_COLOR,h+GRID_SIZE_PIX/2-e,v+GRID_SIZE_PIX/2-e,h+GRID_SIZE_PIX/2+e,v+GRID_SIZE_PIX/2-e, 2);    Screen('Drawline',CUR_WINDOW,STIM_COLOR,h+GRID_SIZE_PIX/2-e,v+GRID_SIZE_PIX/2-e,h+GRID_SIZE_PIX/2-sqrt(2)/2*e,v+GRID_SIZE_PIX/2-sqrt(2)/2*e, 2);    Screen('Drawline',CUR_WINDOW,STIM_COLOR,h+GRID_SIZE_PIX/2+e,v+GRID_SIZE_PIX/2-e,h+GRID_SIZE_PIX/2+sqrt(2)/2*e,v+GRID_SIZE_PIX/2-sqrt(2)/2*e, 2);case 9,    e=LENGTH/(5*pi/3+sqrt(10)/2);    Screen('FrameArc',CUR_WINDOW,STIM_COLOR,[h+GRID_SIZE_PIX/2-e v+GRID_SIZE_PIX/2-e h+GRID_SIZE_PIX/2+e+2 v+GRID_SIZE_PIX/2+e],-150,300,2);    Screen('Drawline',CUR_WINDOW,STIM_COLOR,h+GRID_SIZE_PIX/2,v+GRID_SIZE_PIX/2-e/2,h+(GRID_SIZE_PIX-e)*0.5,v+0.5*(GRID_SIZE_PIX+sqrt(3)*e), 2);    Screen('Drawline',CUR_WINDOW,STIM_COLOR,h+GRID_SIZE_PIX/2,v+GRID_SIZE_PIX/2-e/2,h+(GRID_SIZE_PIX+e)*0.5,v+0.5*(GRID_SIZE_PIX+sqrt(3)*e), 2);otherwise,    fprintf('wrong stim number');end% Redraw targets for Joey%if MONKEY_ID ==2if ~CONFIG    DIM = 0;endshowTarget(NTARGET, TX, TY, T2X, T2Y, NaN, 1, CONFIG, MONKEY_ID, DIM, T_ANGLE_OFFSET, 0);%endScreen('DrawingFinished',CUR_WINDOW);Screen('Flip',CUR_WINDOW,[],0);